{"ast":null,"code":"var _jsxFileName = \"/Users/morimoto/Desktop/react_study/ReactBasic/chatgpt/src/components/Todo.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n  const generateId = () => Math.random().toString(36).substr(2, 9);\n  const addTodo = () => {\n    if (text === \"\") {\n      alert(\"TODOを入力してください。\");\n      return;\n    }\n    const newTodo = {\n      id: generateId(),\n      text: todo\n    };\n    const _todos = [...todos, newTodo];\n    setTodos(_todos);\n    setTodo(\"\");\n  };\n  const deleteTodo = id => {\n    console.log(id);\n    const updatedTodos = todos.filter(todo => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.text, \"-\", todo.id, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTodo(todo.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTodo(e.target.value),\n      value: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"CzSf8AG78ZqZthZ1/7LSPj0oYMI=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Todo","_s","todos","setTodos","todo","setTodo","generateId","Math","random","toString","substr","addTodo","text","alert","newTodo","id","_todos","deleteTodo","console","log","updatedTodos","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/morimoto/Desktop/react_study/ReactBasic/chatgpt/src/components/Todo.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Todo = () => {\n  const [todos, setTodos] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n\n  const generateId = () => Math.random().toString(36).substr(2, 9);\n\n  const addTodo = () => {\n    if (text === \"\") {\n      alert(\"TODOを入力してください。\");\n      return;\n    }\n    const newTodo = { id: generateId(), text: todo };\n    const _todos = [...todos, newTodo];\n    setTodos(_todos);\n    setTodo(\"\");\n  };\n\n  const deleteTodo = (id) => {\n    console.log(id);\n    const updatedTodos = todos.filter((todo) => todo.id !== id);\n\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div className=\"todo\">\n      <h1>Todo List</h1>\n      {todos.map((todo) => {\n        return (\n          <li key={todo.id}>\n            {todo.text}-{todo.id}\n            <button onClick={() => deleteTodo(todo.id)}>delete</button>\n          </li>\n        );\n      })}\n      <input\n        type=\"text\"\n        onChange={(e) => setTodo(e.target.value)}\n        value={todo}\n      ></input>\n      <button onClick={addTodo}>add</button>\n    </div>\n  );\n};\n\nexport default Todo;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,UAAU,GAAGA,CAAA,KAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAEhE,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIC,IAAI,KAAK,EAAE,EAAE;MACfC,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACF;IACA,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAET,UAAU,CAAC,CAAC;MAAEM,IAAI,EAAER;IAAK,CAAC;IAChD,MAAMY,MAAM,GAAG,CAAC,GAAGd,KAAK,EAAEY,OAAO,CAAC;IAClCX,QAAQ,CAACa,MAAM,CAAC;IAChBX,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMY,UAAU,GAAIF,EAAE,IAAK;IACzBG,OAAO,CAACC,GAAG,CAACJ,EAAE,CAAC;IACf,MAAMK,YAAY,GAAGlB,KAAK,CAACmB,MAAM,CAAEjB,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKA,EAAE,CAAC;IAE3DZ,QAAQ,CAACiB,YAAY,CAAC;EACxB,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBxB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBzB,KAAK,CAAC0B,GAAG,CAAExB,IAAI,IAAK;MACnB,oBACEL,OAAA;QAAAwB,QAAA,GACGnB,IAAI,CAACQ,IAAI,EAAC,GAAC,EAACR,IAAI,CAACW,EAAE,eACpBhB,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACb,IAAI,CAACW,EAAE,CAAE;UAAAQ,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFpDvB,IAAI,CAACW,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CAAC;IAET,CAAC,CAAC,eACF5B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAGC,CAAC,IAAK3B,OAAO,CAAC2B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACzCA,KAAK,EAAE9B;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACT5B,OAAA;MAAQ8B,OAAO,EAAElB,OAAQ;MAAAY,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3CID,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}